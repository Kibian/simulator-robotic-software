Program
 . Declaration
 .  . H_file -> Nombre del archivo: Servo.h
 . Program_code
 .  . Definition
 .  .  . Constant
 .  .  .  . Var_type -> int
 .  .  .  . Assignment -> inR1 = 2+3
 .  .  .  .  . Expression -> 2+3
 .  .  .  .  .  . Expression -> 2
 .  .  .  .  .  . Expression -> 3
 . Program_code
 .  . Definition
 .  .  . Constant
 .  .  .  . Var_type -> int
 .  .  .  . Assignment -> inR2 = 3
 .  .  .  .  . Expression -> 3
 . Program_code
 .  . Definition
 .  .  . Constant
 .  .  .  . Var_type -> int
 .  .  .  . Assignment -> enableR = 9
 .  .  .  .  . Expression -> 9
 . Program_code
 .  . Definition
 .  .  . Constant
 .  .  .  . Var_type -> int
 .  .  .  . Assignment -> inL1 = 4
 .  .  .  .  . Expression -> 4
 . Program_code
 .  . Definition
 .  .  . Constant
 .  .  .  . Var_type -> int
 .  .  .  . Assignment -> inL2 = 5
 .  .  .  .  . Expression -> 5
 . Program_code
 .  . Definition
 .  .  . Constant
 .  .  .  . Var_type -> int
 .  .  .  . Assignment -> enableL = 10
 .  .  .  .  . Expression -> 10
 . Program_code
 .  . Definition
 .  .  . Assignment_definition
 .  .  .  . Var_type -> double
 .  .  .  . Assignment -> numPrueba = 69.20201
 .  .  .  .  . Expression -> 69.20201
 . Program_code
 .  . Definition
 .  .  . Assignment_definition
 .  .  .  . Var_type -> bool
 .  .  .  . Assignment -> tfPrueba = false
 .  .  .  .  . Expression -> false
 . Program_code
 .  . Definition
 .  .  . Assignment_definition
 .  .  .  . Var_type -> bool
 .  .  .  . Assignment -> tprueba = true
 .  .  .  .  . Expression -> true
 . Program_code
 .  . Definition
 .  .  . Constant
 .  .  .  . Var_type -> int
 .  .  .  . Assignment -> PhotoSensorLeft = 6
 .  .  .  .  . Expression -> 6
 . Program_code
 .  . Definition
 .  .  . Constant
 .  .  .  . Var_type -> int
 .  .  .  . Assignment -> PhotoSensorRight = 7
 .  .  .  .  . Expression -> 7
 . Program_code
 .  . Definition
 .  .  . Constant
 .  .  .  . Var_type -> int
 .  .  .  . Assignment -> BLANCO = 0
 .  .  .  .  . Expression -> 0
 . Program_code
 .  . Definition
 .  .  . Constant
 .  .  .  . Var_type -> int
 .  .  .  . Assignment -> NEGRO = 1
 .  .  .  .  . Expression -> 1
 . Setup
 .  . Code_block
 .  .  . Sentence
 .  .  .  . Function_call
 .  .  .  .  . Parameter
 .  .  .  .  .  . Expression -> inR1
 .  .  .  .  .  . Expression -> OUTPUT
 .  .  . Sentence
 .  .  .  . Function_call
 .  .  .  .  . Parameter
 .  .  .  .  .  . Expression -> inR2
 .  .  .  .  .  . Expression -> OUTPUT
 .  .  . Sentence
 .  .  .  . Function_call
 .  .  .  .  . Parameter
 .  .  .  .  .  . Expression -> enableR
 .  .  .  .  .  . Expression -> OUTPUT
 .  .  . Sentence
 .  .  .  . Function_call
 .  .  .  .  . Parameter
 .  .  .  .  .  . Expression -> inL1
 .  .  .  .  .  . Expression -> OUTPUT
 .  .  . Sentence
 .  .  .  . Function_call
 .  .  .  .  . Parameter
 .  .  .  .  .  . Expression -> inL2
 .  .  .  .  .  . Expression -> OUTPUT
 .  .  . Sentence
 .  .  .  . Function_call
 .  .  .  .  . Parameter
 .  .  .  .  .  . Expression -> enableL
 .  .  .  .  .  . Expression -> OUTPUT
 .  .  . Sentence
 .  .  .  . Function_call
 .  .  .  .  . Parameter
 .  .  .  .  .  . Expression -> PhotoSensorLeft
 .  .  .  .  .  . Expression -> INPUT
 .  .  . Sentence
 .  .  .  . Function_call
 .  .  .  .  . Parameter
 .  .  .  .  .  . Expression -> PhotoSensorRight
 .  .  .  .  .  . Expression -> INPUT
 . Loop
 .  . Code_block
 .  .  . Sentence
 .  .  .  . Conditional_sentence
 .  .  .  .  . Expression -> digitalRead(PhotoSensorLeft)==NEGRO&&digitalRead(PhotoSensorRight)==NEGRO
 .  .  .  .  .  . Expression -> digitalRead(PhotoSensorLeft)==NEGRO
 .  .  .  .  .  .  . Expression -> digitalRead(PhotoSensorLeft)
 .  .  .  .  .  .  .  . Function_call
 .  .  .  .  .  .  .  .  . Parameter
 .  .  .  .  .  .  .  .  .  . Expression -> PhotoSensorLeft
 .  .  .  .  .  .  . Expression -> NEGRO
 .  .  .  .  .  . Expression -> digitalRead(PhotoSensorRight)==NEGRO
 .  .  .  .  .  .  . Expression -> digitalRead(PhotoSensorRight)
 .  .  .  .  .  .  .  . Function_call
 .  .  .  .  .  .  .  .  . Parameter
 .  .  .  .  .  .  .  .  .  . Expression -> PhotoSensorRight
 .  .  .  .  .  .  . Expression -> NEGRO
 .  .  .  .  . Code_block
 .  .  .  .  .  . Sentence
 .  .  .  .  .  .  . Function_call
 .  .  .  .  .  .  .  . Parameter
 .  .  .  .  .  .  .  .  . Expression -> 160
 .  .  .  .  . Conditional_sentence
 .  .  .  .  .  . Expression -> digitalRead(PhotoSensorLeft)==BLANCO&&digitalRead(PhotoSensorRight)==BLANCO
 .  .  .  .  .  .  . Expression -> digitalRead(PhotoSensorLeft)==BLANCO
 .  .  .  .  .  .  .  . Expression -> digitalRead(PhotoSensorLeft)
 .  .  .  .  .  .  .  .  . Function_call
 .  .  .  .  .  .  .  .  .  . Parameter
 .  .  .  .  .  .  .  .  .  .  . Expression -> PhotoSensorLeft
 .  .  .  .  .  .  .  . Expression -> BLANCO
 .  .  .  .  .  .  . Expression -> digitalRead(PhotoSensorRight)==BLANCO
 .  .  .  .  .  .  .  . Expression -> digitalRead(PhotoSensorRight)
 .  .  .  .  .  .  .  .  . Function_call
 .  .  .  .  .  .  .  .  .  . Parameter
 .  .  .  .  .  .  .  .  .  .  . Expression -> PhotoSensorRight
 .  .  .  .  .  .  .  . Expression -> BLANCO
 .  .  .  .  .  . Code_block
 .  .  .  .  .  .  . Sentence
 .  .  .  .  .  .  .  . Function_call
 .  .  .  .  .  .  .  .  . Parameter
 .  .  .  .  .  .  .  .  .  . Expression -> 200
 .  .  .  .  .  . Conditional_sentence
 .  .  .  .  .  .  . Expression -> digitalRead(PhotoSensorLeft)==BLANCO
 .  .  .  .  .  .  .  . Expression -> digitalRead(PhotoSensorLeft)
 .  .  .  .  .  .  .  .  . Function_call
 .  .  .  .  .  .  .  .  .  . Parameter
 .  .  .  .  .  .  .  .  .  .  . Expression -> PhotoSensorLeft
 .  .  .  .  .  .  .  . Expression -> BLANCO
 .  .  .  .  .  .  . Code_block
 .  .  .  .  .  .  .  . Sentence
 .  .  .  .  .  .  .  .  . Function_call
 .  .  .  .  .  .  .  .  .  . Parameter
 .  .  .  .  .  .  .  .  .  .  . Expression -> 150
 .  .  .  .  .  .  . Conditional_sentence
 .  .  .  .  .  .  .  . Expression -> digitalRead(PhotoSensorRight)==BLANCO
 .  .  .  .  .  .  .  .  . Expression -> digitalRead(PhotoSensorRight)
 .  .  .  .  .  .  .  .  .  . Function_call
 .  .  .  .  .  .  .  .  .  .  . Parameter
 .  .  .  .  .  .  .  .  .  .  .  . Expression -> PhotoSensorRight
 .  .  .  .  .  .  .  .  . Expression -> BLANCO
 .  .  .  .  .  .  .  . Code_block
 .  .  .  .  .  .  .  .  . Sentence
 .  .  .  .  .  .  .  .  .  . Function_call
 .  .  .  .  .  .  .  .  .  .  . Parameter
 .  .  .  .  .  .  .  .  .  .  .  . Expression -> 150
 . Program_code
 .  . Function -> avanzar
 .  .  . Var_type -> void
 .  .  . Code_block
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR1
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR2
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableR
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL1
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL2
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableL
 .  .  .  .  .  .  . Expression -> HIGH
 . Program_code
 .  . Function -> retroceder
 .  .  . Var_type -> void
 .  .  . Code_block
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR1
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR2
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableR
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL1
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL2
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableL
 .  .  .  .  .  .  . Expression -> HIGH
 . Program_code
 .  . Function -> parar
 .  .  . Var_type -> void
 .  .  . Code_block
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableR
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableL
 .  .  .  .  .  .  . Expression -> LOW
 . Program_code
 .  . Function -> izquierda
 .  .  . Var_type -> void
 .  .  . Code_block
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR1
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR2
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableR
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL1
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL2
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableL
 .  .  .  .  .  .  . Expression -> HIGH
 . Program_code
 .  . Function -> derecha
 .  .  . Var_type -> void
 .  .  . Code_block
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR1
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR2
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableR
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL1
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL2
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableL
 .  .  .  .  .  .  . Expression -> HIGH
 . Program_code
 .  . Function -> avanzarVel
 .  .  . Var_type -> void
 .  .  . Function_args
 .  .  .  . Simple_definition -> Variable: vel
 .  .  .  .  . Var_type -> int
 .  .  . Code_block
 .  .  .  . Sentence
 .  .  .  .  . Conditional_sentence
 .  .  .  .  .  . Expression -> vel>255
 .  .  .  .  .  .  . Expression -> vel
 .  .  .  .  .  .  . Expression -> 255
 .  .  .  .  .  . Code_block
 .  .  .  .  .  .  . Sentence
 .  .  .  .  .  .  .  . Assignment -> vel = 255
 .  .  .  .  .  .  .  .  . Expression -> 255
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR1
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR2
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableR
 .  .  .  .  .  .  . Expression -> vel
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL1
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL2
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableL
 .  .  .  .  .  .  . Expression -> vel
 . Program_code
 .  . Function -> retrocederVel
 .  .  . Var_type -> void
 .  .  . Function_args
 .  .  .  . Simple_definition -> Variable: vel
 .  .  .  .  . Var_type -> int
 .  .  . Code_block
 .  .  .  . Sentence
 .  .  .  .  . Conditional_sentence
 .  .  .  .  .  . Expression -> vel>255
 .  .  .  .  .  .  . Expression -> vel
 .  .  .  .  .  .  . Expression -> 255
 .  .  .  .  .  . Code_block
 .  .  .  .  .  .  . Sentence
 .  .  .  .  .  .  .  . Assignment -> vel = 255
 .  .  .  .  .  .  .  .  . Expression -> 255
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR1
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR2
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableR
 .  .  .  .  .  .  . Expression -> vel
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL1
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL2
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableL
 .  .  .  .  .  .  . Expression -> vel
 . Program_code
 .  . Function -> izquierdaVel
 .  .  . Var_type -> void
 .  .  . Function_args
 .  .  .  . Simple_definition -> Variable: vel
 .  .  .  .  . Var_type -> int
 .  .  . Code_block
 .  .  .  . Sentence
 .  .  .  .  . Conditional_sentence
 .  .  .  .  .  . Expression -> vel>255
 .  .  .  .  .  .  . Expression -> vel
 .  .  .  .  .  .  . Expression -> 255
 .  .  .  .  .  . Code_block
 .  .  .  .  .  .  . Sentence
 .  .  .  .  .  .  .  . Assignment -> vel = 255
 .  .  .  .  .  .  .  .  . Expression -> 255
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR1
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR2
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableR
 .  .  .  .  .  .  . Expression -> vel
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL1
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL2
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableL
 .  .  .  .  .  .  . Expression -> vel
 . Program_code
 .  . Function -> derechaVel
 .  .  . Var_type -> void
 .  .  . Function_args
 .  .  .  . Simple_definition -> Variable: vel
 .  .  .  .  . Var_type -> int
 .  .  . Code_block
 .  .  .  . Sentence
 .  .  .  .  . Conditional_sentence
 .  .  .  .  .  . Expression -> vel>255
 .  .  .  .  .  .  . Expression -> vel
 .  .  .  .  .  .  . Expression -> 255
 .  .  .  .  .  . Code_block
 .  .  .  .  .  .  . Sentence
 .  .  .  .  .  .  .  . Assignment -> vel = 255
 .  .  .  .  .  .  .  .  . Expression -> 255
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR1
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inR2
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableR
 .  .  .  .  .  .  . Expression -> vel
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL1
 .  .  .  .  .  .  . Expression -> HIGH
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> inL2
 .  .  .  .  .  .  . Expression -> LOW
 .  .  .  . Sentence
 .  .  .  .  . Function_call
 .  .  .  .  .  . Parameter
 .  .  .  .  .  .  . Expression -> enableL
 .  .  .  .  .  .  . Expression -> vel
